/* tslint:disable */
/* eslint-disable */
/**
 * Engineering Thesis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  InlineObject1,
  InlineObject2,
  LogInEnterpriseEmployeeRequest,
  LogInEnterpriseEmployeeResponse,
  LogInIndependentEndUserRequest,
  LogInIndependentEndUserResponse,
} from '../models/index';
import {
    InlineObject1FromJSON,
    InlineObject1ToJSON,
    InlineObject2FromJSON,
    InlineObject2ToJSON,
    LogInEnterpriseEmployeeRequestFromJSON,
    LogInEnterpriseEmployeeRequestToJSON,
    LogInEnterpriseEmployeeResponseFromJSON,
    LogInEnterpriseEmployeeResponseToJSON,
    LogInIndependentEndUserRequestFromJSON,
    LogInIndependentEndUserRequestToJSON,
    LogInIndependentEndUserResponseFromJSON,
    LogInIndependentEndUserResponseToJSON,
} from '../models/index';

export interface LogInEnterpriseEmployeeOperationRequest {
    logInEnterpriseEmployeeRequest: LogInEnterpriseEmployeeRequest;
}

export interface LogInIndependentEndUserOperationRequest {
    logInIndependentEndUserRequest: LogInIndependentEndUserRequest;
}

/**
 * 
 */
export class AuthApi extends runtime.BaseAPI {

    /**
     */
    async logInEnterpriseEmployeeRaw(requestParameters: LogInEnterpriseEmployeeOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LogInEnterpriseEmployeeResponse>> {
        if (requestParameters['logInEnterpriseEmployeeRequest'] == null) {
            throw new runtime.RequiredError(
                'logInEnterpriseEmployeeRequest',
                'Required parameter "logInEnterpriseEmployeeRequest" was null or undefined when calling logInEnterpriseEmployee().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/auth/enterprise-employee/log-in`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LogInEnterpriseEmployeeRequestToJSON(requestParameters['logInEnterpriseEmployeeRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LogInEnterpriseEmployeeResponseFromJSON(jsonValue));
    }

    /**
     */
    async logInEnterpriseEmployee(logInEnterpriseEmployeeRequest: LogInEnterpriseEmployeeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LogInEnterpriseEmployeeResponse> {
        const response = await this.logInEnterpriseEmployeeRaw({ logInEnterpriseEmployeeRequest: logInEnterpriseEmployeeRequest }, initOverrides);
        return await response.value();
    }

    /**
     */
    async logInIndependentEndUserRaw(requestParameters: LogInIndependentEndUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LogInIndependentEndUserResponse>> {
        if (requestParameters['logInIndependentEndUserRequest'] == null) {
            throw new runtime.RequiredError(
                'logInIndependentEndUserRequest',
                'Required parameter "logInIndependentEndUserRequest" was null or undefined when calling logInIndependentEndUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/auth/independent-end-user/log-in`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: LogInIndependentEndUserRequestToJSON(requestParameters['logInIndependentEndUserRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => LogInIndependentEndUserResponseFromJSON(jsonValue));
    }

    /**
     */
    async logInIndependentEndUser(logInIndependentEndUserRequest: LogInIndependentEndUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LogInIndependentEndUserResponse> {
        const response = await this.logInIndependentEndUserRaw({ logInIndependentEndUserRequest: logInIndependentEndUserRequest }, initOverrides);
        return await response.value();
    }

}
