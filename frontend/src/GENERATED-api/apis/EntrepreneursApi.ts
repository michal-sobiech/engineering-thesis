/* tslint:disable */
/* eslint-disable */
/**
 * Engineering Thesis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EntrepreneurGetMeResponse,
  GetEntrepreneurEnterprisesResponseItem,
  InlineObject,
  InlineObject1,
  InlineObject2,
  InlineObject4,
} from '../models/index';
import {
    EntrepreneurGetMeResponseFromJSON,
    EntrepreneurGetMeResponseToJSON,
    GetEntrepreneurEnterprisesResponseItemFromJSON,
    GetEntrepreneurEnterprisesResponseItemToJSON,
    InlineObjectFromJSON,
    InlineObjectToJSON,
    InlineObject1FromJSON,
    InlineObject1ToJSON,
    InlineObject2FromJSON,
    InlineObject2ToJSON,
    InlineObject4FromJSON,
    InlineObject4ToJSON,
} from '../models/index';

export interface GetEntrepreneurEnterprisesRequest {
    entrepreneurId: number;
}

/**
 * 
 */
export class EntrepreneursApi extends runtime.BaseAPI {

    /**
     */
    async getEntrepreneurEnterprisesRaw(requestParameters: GetEntrepreneurEnterprisesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetEntrepreneurEnterprisesResponseItem>>> {
        if (requestParameters['entrepreneurId'] == null) {
            throw new runtime.RequiredError(
                'entrepreneurId',
                'Required parameter "entrepreneurId" was null or undefined when calling getEntrepreneurEnterprises().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/entrepreneurs/{entrepreneurId}/enterprises`;
        urlPath = urlPath.replace(`{${"entrepreneurId"}}`, encodeURIComponent(String(requestParameters['entrepreneurId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetEntrepreneurEnterprisesResponseItemFromJSON));
    }

    /**
     */
    async getEntrepreneurEnterprises(entrepreneurId: number, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetEntrepreneurEnterprisesResponseItem>> {
        const response = await this.getEntrepreneurEnterprisesRaw({ entrepreneurId: entrepreneurId }, initOverrides);
        return await response.value();
    }

    /**
     */
    async getMeEntrepreneurRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntrepreneurGetMeResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("JwtBearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/entrepreneurs/me`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntrepreneurGetMeResponseFromJSON(jsonValue));
    }

    /**
     */
    async getMeEntrepreneur(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntrepreneurGetMeResponse> {
        const response = await this.getMeEntrepreneurRaw(initOverrides);
        return await response.value();
    }

}
