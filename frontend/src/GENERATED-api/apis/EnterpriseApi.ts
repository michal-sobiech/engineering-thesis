/* tslint:disable */
/* eslint-disable */
/**
 * Engineering Thesis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GetEnterpriseServicesResponseItem,
  InlineObject1,
  InlineObject4,
} from '../models/index';
import {
    GetEnterpriseServicesResponseItemFromJSON,
    GetEnterpriseServicesResponseItemToJSON,
    InlineObject1FromJSON,
    InlineObject1ToJSON,
    InlineObject4FromJSON,
    InlineObject4ToJSON,
} from '../models/index';

export interface GetEnterpriseServicesRequest {
    enterpriseId: number;
}

/**
 * 
 */
export class EnterpriseApi extends runtime.BaseAPI {

    /**
     * Get enterprise employees
     */
    async getEnterpriseServicesRaw(requestParameters: GetEnterpriseServicesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GetEnterpriseServicesResponseItem>>> {
        if (requestParameters['enterpriseId'] == null) {
            throw new runtime.RequiredError(
                'enterpriseId',
                'Required parameter "enterpriseId" was null or undefined when calling getEnterpriseServices().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/enterprises/{enterpriseId}/services`;
        urlPath = urlPath.replace(`{${"enterpriseId"}}`, encodeURIComponent(String(requestParameters['enterpriseId'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GetEnterpriseServicesResponseItemFromJSON));
    }

    /**
     * Get enterprise employees
     */
    async getEnterpriseServices(enterpriseId: number, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GetEnterpriseServicesResponseItem>> {
        const response = await this.getEnterpriseServicesRaw({ enterpriseId: enterpriseId }, initOverrides);
        return await response.value();
    }

}
