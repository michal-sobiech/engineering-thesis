/* tslint:disable */
/* eslint-disable */
/**
 * Engineering Thesis API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CheckIndependentEndUserEmailExists200Response,
  CreateIndependentEndUserRequest,
  InlineObject1,
  InlineObject3,
  InlineObject4,
} from '../models/index';
import {
    CheckIndependentEndUserEmailExists200ResponseFromJSON,
    CheckIndependentEndUserEmailExists200ResponseToJSON,
    CreateIndependentEndUserRequestFromJSON,
    CreateIndependentEndUserRequestToJSON,
    InlineObject1FromJSON,
    InlineObject1ToJSON,
    InlineObject3FromJSON,
    InlineObject3ToJSON,
    InlineObject4FromJSON,
    InlineObject4ToJSON,
} from '../models/index';

export interface CheckIndependentEndUserEmailExistsRequest {
    email: string;
}

export interface CreateIndependentEndUserOperationRequest {
    createIndependentEndUserRequest: CreateIndependentEndUserRequest;
}

/**
 * 
 */
export class IndependentEndUsersApi extends runtime.BaseAPI {

    /**
     */
    async checkIndependentEndUserEmailExistsRaw(requestParameters: CheckIndependentEndUserEmailExistsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CheckIndependentEndUserEmailExists200Response>> {
        if (requestParameters['email'] == null) {
            throw new runtime.RequiredError(
                'email',
                'Required parameter "email" was null or undefined when calling checkIndependentEndUserEmailExists().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['email'] != null) {
            queryParameters['email'] = requestParameters['email'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/independent-end-users/exists`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CheckIndependentEndUserEmailExists200ResponseFromJSON(jsonValue));
    }

    /**
     */
    async checkIndependentEndUserEmailExists(email: string, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CheckIndependentEndUserEmailExists200Response> {
        const response = await this.checkIndependentEndUserEmailExistsRaw({ email: email }, initOverrides);
        return await response.value();
    }

    /**
     * Create an independent end user
     */
    async createIndependentEndUserRaw(requestParameters: CreateIndependentEndUserOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['createIndependentEndUserRequest'] == null) {
            throw new runtime.RequiredError(
                'createIndependentEndUserRequest',
                'Required parameter "createIndependentEndUserRequest" was null or undefined when calling createIndependentEndUser().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/independent-end-users`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: CreateIndependentEndUserRequestToJSON(requestParameters['createIndependentEndUserRequest']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Create an independent end user
     */
    async createIndependentEndUser(createIndependentEndUserRequest: CreateIndependentEndUserRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.createIndependentEndUserRaw({ createIndependentEndUserRequest: createIndependentEndUserRequest }, initOverrides);
    }

}
