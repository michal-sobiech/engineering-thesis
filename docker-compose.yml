x-backend-env-vars: &backend_env_vars
  DB_NAME: ${DB_NAME}
  DB_USER: ${DB_BE_USER}
  DB_PASSWORD: ${DB_BE_PASSWORD}

x-backend-healthcheck: &backend_healthcheck
  test: [ "CMD", "curl", "-f", "http://localhost" ]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 20s
  start_interval: 5s 

x-backend-networks: &backend_networks
  - nginx_and_backend
  - backend_and_database

services:
  frontend:
    build:
      context: ./frontend
    ports:
      - 3000:3000
    environment:
      NGINX_HOST: nginx
    depends_on:
      - nginx

  nginx:
    build:
      context: ./nginx
    ports:
      - 8000:80
    depends_on:
      - backend_1
      - backend_2
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
      start_interval: 5s 
    networks:
      - nginx_and_backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  backend_1:
    build:
      context: ./backend
    ports:
      - 8080:80
    environment: *backend_env_vars
    healthcheck: *backend_healthcheck
    networks: *backend_networks

  backend_2:
    build:
      context: ./backend
    ports:
      - 8081:80
    environment: *backend_env_vars
    healthcheck: *backend_healthcheck
    networks: *backend_networks

  database:
    image: postgres:latest
    ports:
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      DB_BE_USER: ${DB_BE_USER}
      DB_BE_PASSWORD: ${DB_BE_PASSWORD}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "$DB_BE_PASSWORD", "-d", "$DB_NAME"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
      start_interval: 5s 
    networks:
      - backend_and_database
    volumes:
      - ./database/init_scripts:/docker-entrypoint-initdb.d/:ro

networks:
  nginx_and_backend:
    driver: bridge
  backend_and_database:
    driver: bridge
